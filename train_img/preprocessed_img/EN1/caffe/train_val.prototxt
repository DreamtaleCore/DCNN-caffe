name: "face_alignment_full_net"
layer {
    name: "data"
    type: "HDF5Data"
    top: "data"
    top: "label"
    hdf5_data_param {
        source: "/home/cmcc/Desktop/DCNNCascade_pts/train_img/processed_img/EN1/train_hdf5.txt"
        batch_size: 64
    }
    include { phase: TRAIN }
}
layer {
    name: "data"
    type: "HDF5Data"
    top: "data"
    top: "label"
    hdf5_data_param {
        source: "/home/cmcc/Desktop/DCNNCascade_pts/train_img/processed_img/EN1/validation_hdf5.txt"
        batch_size: 64
    }
    include { phase: TEST }
}
layer {
    name: "conv1"
    type: "Convolution"
    bottom: "data"
    top: "conv1"
    param { lr_mult: 1 }
    param { lr_mult: 2 }
    convolution_param {
        num_output: 20
        kernel_size: 4
        stride: 1
        pad: 0
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0.1
        }
    }
}
layer {
    name: "pool1"
    type: "Pooling"
    bottom: "conv1"
    top: "pool1"
    pooling_param {
        pool: MAX
        kernel_size: 2
        stride: 1
    }
}
layer {
    name: "relu1"
    type: "ReLU"
    bottom: "pool1"
    top: "pool1"
}
layer {
    name: "conv2"
    type: "Convolution"
    bottom: "pool1"
    top: "conv2"
    param { lr_mult: 1 }
    param { lr_mult: 2 }
    convolution_param {
        num_output: 40
        kernel_size: 3
        stride: 1
        #pad: 2
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0.1
        }
    }
}
layer {
    name: "pool2"
    type: "Pooling"
    bottom: "conv2"
    top: "pool2"
    pooling_param {
        pool: MAX
        kernel_size: 2
        stride: 1
    }
}
layer {
    name: "relu2"
    type: "ReLU"
    bottom: "pool2"
    top: "pool2"
}
layer {
    name: "conv3"
    type: "Convolution"
    bottom: "pool2"
    top: "conv3"
    param { lr_mult: 1 }
    param { lr_mult: 2 }
    convolution_param {
        num_output: 60
        kernel_size: 5
        stride: 1
        #pad: 2
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0.1
        }
    }
}
layer {
    name: "pool3"
    type: "Pooling"
    bottom: "conv3"
    top: "pool3"
    pooling_param {
        pool: MAX
        kernel_size: 2
        stride: 1
    }
}
layer {
    name: "relu3"
    type: "ReLU"
    bottom: "pool3"
    top: "pool3"
}
layer {
    name: "conv4"
    type: "Convolution"
    bottom: "pool3"
    top: "conv4"
    param { lr_mult: 1 }
    param { lr_mult: 2 }
    convolution_param {
        num_output: 80
        kernel_size: 2
        stride: 1
        #pad: 2
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0.1
        }
    }
}
layer {
    name: "ip1"
    type: "InnerProduct"
    bottom: "conv4"
    top: "ip1"
    param {
        lr_mult: 1
    }
    param {
        lr_mult: 2
    }
    inner_product_param {
        num_output: 100
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
        type: "constant"
        }
    }
}
layer {
    name: "ip2"
    type: "InnerProduct"
    bottom: "ip1"
    top: "ip2"
    param {
        lr_mult: 1
    }
    param {
        lr_mult: 2
    }
    inner_product_param {
        num_output: 6
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
        }
    }
}

layer {
    name: "accuracy"
    type: "EuclideanLoss"
    bottom: "ip2"
    bottom: "label"
    top: "accuracy"
    include { phase: TEST }
}
layer {
    name: "loss"
    type: "EuclideanLoss"
    bottom: "ip2"
    bottom: "label"
    top: "loss"
}

